# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export TERM="xterm-256color"
export LC_ALL="en_US.UTF-8"
export EDITOR="vim"
export _Z_CMD=","
export GOPATH=$HOME/go
export NPM_PACKAGES=$HOME/.npm-packages
export GEM_HOME=$HOME/.gems

export PATH=$PATH:/usr/local/sbin:$NPM_PACKAGES/bin:$GOPATH/bin:$GEM_HOME/bin

source ~/.alias

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh
# can possibly slow down terminal
ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="agnoster"
# typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status context dir newline virtualenv vcs)
# typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(aws_prompt_info kubecontext)
ZSH_THEME="powerlevel10k/powerlevel10k"
# POWERLEVEL9K_DISABLE_RPROMPT=false
# POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
# POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND='kubectl|helm|kubens|kubectx|oc|istioctl|kogito|k9s|helmfile'
# POWERLEVEL9K_AWS_SHOW_ON_COMMAND='aws|awless|cdk|terraform|pulumi|terragrunt|aws-vault'


# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(z git zsh-autosuggestions docker gpg-agent aws)

source $ZSH/oh-my-zsh.sh
# source ~/tmuxinator.zsh

hash kubectl 2>/dev/null && source <(kubectl completion zsh)
hash kops 2>/dev/null && source <(kops completion zsh)
hash aws 2>/dev/null && complete -C '/usr/bin/aws_completer' aws


# source ~/.ssh/myrc

# zsh stuff
bindkey -v
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
bindkey '\e.' insert-last-word # Do not set KEYTIMEOUT too low, or it will not work!
bindkey -M vicmd v edit-command-line

export KEYTIMEOUT=20

setopt NO_NOMATCH  # globs like bash
setopt hist_ignore_all_dups
# run fzf install for that to be populated.
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

xset -b
source /home/fblaise/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source /home/fblaise/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/bin/virtualenvwrapper

# echo "SSH_AUTH_SOCK is set to $(echo $SSH_AUTH_SOCK)"

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=243'
echo UPDATESTARTUPTTY | gpg-connect-agent >/dev/null 

# fpath=( ~/.zsh_functions "${fpath[@]}" )
# autoload -Uz list-vault-keys

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

alias fabric='/home/fblaise/.cache/pypoetry/virtualenvs/fabric-C1e6dlYp-py3.11/bin/fabric'

alias fabric-api='/home/fblaise/.cache/pypoetry/virtualenvs/fabric-C1e6dlYp-py3.11/bin/fabric-api'

alias fabric-webui='/home/fblaise/.cache/pypoetry/virtualenvs/fabric-C1e6dlYp-py3.11/bin/fabric-webui'
alias extract_references='fabric --pattern extract_references'
alias philocapsulate='fabric --pattern philocapsulate'
alias ai='fabric --pattern ai'
alias write_semgrep_rule='fabric --pattern write_semgrep_rule'
alias summarize_pull-requests='fabric --pattern summarize_pull-requests'
alias summarize_micro='fabric --pattern summarize_micro'
alias improve_prompt='fabric --pattern improve_prompt'
alias clean_text='fabric --pattern clean_text'
alias extract_sponsors='fabric --pattern extract_sponsors'
alias create_npc='fabric --pattern create_npc'
alias summarize_rpg_session='fabric --pattern summarize_rpg_session'
alias analyze_prose_json='fabric --pattern analyze_prose_json'
alias analyze_spiritual_text='fabric --pattern analyze_spiritual_text'
alias rate_value='fabric --pattern rate_value'
alias analyze_threat_report_trends='fabric --pattern analyze_threat_report_trends'
alias extract_poc='fabric --pattern extract_poc'
alias extract_wisdom='fabric --pattern extract_wisdom'
alias compare_and_contrast='fabric --pattern compare_and_contrast'
alias analyze_incident='fabric --pattern analyze_incident'
alias analyze_claims='fabric --pattern analyze_claims'
alias extract_recommendations='fabric --pattern extract_recommendations'
alias label_and_rate='fabric --pattern label_and_rate'
alias create_logo='fabric --pattern create_logo'
alias summarize='fabric --pattern summarize'
alias write_essay='fabric --pattern write_essay'
alias rate_content='fabric --pattern rate_content'
alias improve_writing='fabric --pattern improve_writing'
alias summarize_newsletter='fabric --pattern summarize_newsletter'
alias explain_code='fabric --pattern explain_code'
alias create_aphorisms='fabric --pattern create_aphorisms'
alias extract_videoid='fabric --pattern extract_videoid'
alias extract_article_wisdom='fabric --pattern extract_article_wisdom'
alias check_agreement='fabric --pattern check_agreement'
alias analyze_prose='fabric --pattern analyze_prose'
alias analyze_paper='fabric --pattern analyze_paper'
alias explain_docs='fabric --pattern explain_docs'
alias create_video_chapters='fabric --pattern create_video_chapters'
alias analyze_threat_report='fabric --pattern analyze_threat_report'
alias agility_story='fabric --pattern agility_story'
if [ -f "/home/fblaise/.config/fabric/fabric-bootstrap.inc" ]; then . "/home/fblaise/.config/fabric/fabric-bootstrap.inc"; fi
# source '/home/fblaise/.nvm/versions/node/v18.16.1/lib/node_modules/@hyperupcall/autoenv/activate.sh'
eval "$(direnv hook zsh)"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
